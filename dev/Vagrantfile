# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/7"
  config.vm.hostname = "dev"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"
  # 配置私有网络
  config.vm.network "private_network", ip: "192.168.8.8"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  # 禁止默认的共享文件夹
  config.vm.synced_folder ".", "/vagrant", disabled: true
  # mac 共享目录
  # config.vm.synced_folder "/Users/pony/Documents/dev", "/mnt",
  #  owner: "root", group: "root", create: true
  # window 共享目录
  config.vm.synced_folder "D:/Dev", "/mnt", create: true
  #
  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  # 设置虚拟机内存
   vb.memory = "2048"
   vb.name = "dev-docker"
      
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
    yum update
    yum install -y gcc
    yum install -y kernel-devel
    yum install -y wget
    yum install  -y vim
  # 设置中文
    yum install -y kde-l110n-Chinese
    yum reinstall -y glibc-common
  # 设置时区
    timedatectl set-timezone Asia/Shanghai
  # 更新镜像源
    mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
    wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
    yum makecache
  # 关闭 SELINUX
    CHECK=$(grep SELINUX= /etc/selinux/config | grep -v "#")
    if [ "$CHECK" == "SELINUX=enforcing" ]; then
      sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
      setenforce 0
    fi
    if [ "$CHECK" == "SELINUX=permissive" ]; then
      sed -i 's/SELINUX=permissive/SELINUX=disabled/g' /etc/selinux/config
      setenforce 0
    fi
  # 安装docker
    yum remove docker \
              docker-client \
              docker-client-latest \
              docker-common \
              docker-latest \
              docker-latest-logrotate \
              docker-logrotate \
              docker-selinux \
              docker-engine-selinux \
              docker-engine
    yum install -y yum-utils \
                  device-mapper-persistent-data \
                  lvm2
    yum-config-manager \
      --add-repo \
      https://download.docker.com/linux/centos/docker-ce.repo
    yum install -y epel-release
    yum install -y container-selinux
    yum install -y docker-ce
    systemctl start docker
    systemctl enable docker
  # 配置镜像加速器
    mkdir -p /etc/docker
    tee /etc/docker/daemon.json <<-'EOF'
    {
      "registry-mirrors": ["https://onkbrpp6.mirror.aliyuncs.com"]
    }
EOF
    systemctl daemon-reload
    systemctl restart docker
  # 安装docker-compose
    yum install -y python-pip
    pip install --upgrade up
    pip install docker-compose
    docker-compose --version
  # 创建数据保存目录
    mkdir -p /var/data
  SHELL
end
